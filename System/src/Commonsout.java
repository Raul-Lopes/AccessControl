/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author raul
 */
public class Commonsout extends javax.swing.JDialog {

    Integer qtdDiasLiberacao;
    String versao, dataChave, dataEnvio, nomeEmpresa, email, fone, cnpj, endereco, bairro, cidade, caixa;

    /**
     * Creates new form Ahnes
     */
    public Commonsout(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        botaoIdentificacaoMaquina.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        panelDados = new javax.swing.JPanel();
        botaoIdentificacaoMaquina = new javax.swing.JButton();
        labelEmpresa = new javax.swing.JLabel();
        ftfnomeEmpresa = new javax.swing.JFormattedTextField();
        labelCnpj = new javax.swing.JLabel();
        ftfcnpj = new javax.swing.JFormattedTextField();
        labelEmail = new javax.swing.JLabel();
        ftfemail = new javax.swing.JFormattedTextField();
        labelFone = new javax.swing.JLabel();
        ftffone = new javax.swing.JFormattedTextField();
        labelEndereco = new javax.swing.JLabel();
        ftfendereco = new javax.swing.JFormattedTextField();
        labelBairro = new javax.swing.JLabel();
        ftfbairro = new javax.swing.JFormattedTextField();
        labelCidade = new javax.swing.JLabel();
        ftfcidade = new javax.swing.JFormattedTextField();
        panelRodape = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        botaoAtivarChave = new javax.swing.JButton();
        botaoCopiarIdentificacao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerar Chave de Ativação");

        panelDados.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Terminal", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12))); // NOI18N

        botaoIdentificacaoMaquina.setText("1º) Passo: Gerar Identificação da Máquina");
        botaoIdentificacaoMaquina.setMinimumSize(new java.awt.Dimension(235, 25));
        botaoIdentificacaoMaquina.setPreferredSize(new java.awt.Dimension(235, 25));
        botaoIdentificacaoMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIdentificacaoMaquinaActionPerformed(evt);
            }
        });

        labelEmpresa.setText("Empresa:");

        ftfnomeEmpresa.setText("Amazon Company");
        ftfnomeEmpresa.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfnomeEmpresa.setPreferredSize(new java.awt.Dimension(280, 30));

        labelCnpj.setText("CNPJ:");

        ftfcnpj.setText("71.045.611/0001-02");
        ftfcnpj.setMinimumSize(new java.awt.Dimension(140, 30));
        ftfcnpj.setPreferredSize(new java.awt.Dimension(140, 30));

        labelEmail.setText("E-Mail:");

        ftfemail.setText("sac@abc.com.br");
        ftfemail.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfemail.setPreferredSize(new java.awt.Dimension(280, 30));

        labelFone.setText("Fone:");

        ftffone.setText("37 3261 5698");
        ftffone.setMinimumSize(new java.awt.Dimension(140, 30));
        ftffone.setPreferredSize(new java.awt.Dimension(140, 30));

        labelEndereco.setText("Endereço:");

        ftfendereco.setText("Santa Catarina nº 256");
        ftfendereco.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfendereco.setPreferredSize(new java.awt.Dimension(280, 30));
        ftfendereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfenderecoActionPerformed(evt);
            }
        });

        labelBairro.setText("Bairro:");

        ftfbairro.setText("Centro");
        ftfbairro.setMinimumSize(new java.awt.Dimension(140, 30));
        ftfbairro.setPreferredSize(new java.awt.Dimension(140, 30));

        labelCidade.setText("Cidade:");

        ftfcidade.setText("Moema");
        ftfcidade.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfcidade.setPreferredSize(new java.awt.Dimension(280, 30));

        javax.swing.GroupLayout panelDadosLayout = new javax.swing.GroupLayout(panelDados);
        panelDados.setLayout(panelDadosLayout);
        panelDadosLayout.setHorizontalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEmpresa)
                            .addComponent(labelEmail))
                        .addGap(14, 14, 14)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfemail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ftfnomeEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEndereco)
                            .addComponent(labelCidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfcidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ftfendereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addComponent(labelBairro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ftfbairro, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addComponent(labelCnpj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ftfcnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addComponent(labelFone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ftffone, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(botaoIdentificacaoMaquina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelDadosLayout.setVerticalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmpresa)
                    .addComponent(ftfnomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCnpj)
                    .addComponent(ftfcnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmail)
                    .addComponent(ftfemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFone)
                    .addComponent(ftffone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEndereco)
                    .addComponent(ftfendereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBairro)
                    .addComponent(ftfbairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCidade)
                    .addComponent(ftfcidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(botaoIdentificacaoMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelRodape.setLayout(new java.awt.GridBagLayout());

        jEditorPane1.setEditable(false);
        jEditorPane1.setMinimumSize(new java.awt.Dimension(106, 150));
        jEditorPane1.setPreferredSize(new java.awt.Dimension(106, 150));
        jScrollPane1.setViewportView(jEditorPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        panelRodape.add(jScrollPane1, gridBagConstraints);

        botaoAtivarChave.setText("3º) Passo: Ativar Chave");
        botaoAtivarChave.setMaximumSize(new java.awt.Dimension(285, 23));
        botaoAtivarChave.setMinimumSize(new java.awt.Dimension(285, 25));
        botaoAtivarChave.setPreferredSize(new java.awt.Dimension(285, 25));
        botaoAtivarChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtivarChaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        panelRodape.add(botaoAtivarChave, gridBagConstraints);

        botaoCopiarIdentificacao.setText("2º) Passo: Copiar Identificação");
        botaoCopiarIdentificacao.setEnabled(false);
        botaoCopiarIdentificacao.setMaximumSize(new java.awt.Dimension(285, 25));
        botaoCopiarIdentificacao.setMinimumSize(new java.awt.Dimension(285, 25));
        botaoCopiarIdentificacao.setPreferredSize(new java.awt.Dimension(285, 25));
        botaoCopiarIdentificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCopiarIdentificacaoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        panelRodape.add(botaoCopiarIdentificacao, gridBagConstraints);

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelRodape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRodape, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoIdentificacaoMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIdentificacaoMaquinaActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        gerarResgistroPc();
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botaoIdentificacaoMaquinaActionPerformed

    private void botaoCopiarIdentificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCopiarIdentificacaoActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        copiarIdMaquina();
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botaoCopiarIdentificacaoActionPerformed

    private void ftfenderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfenderecoActionPerformed

    }//GEN-LAST:event_ftfenderecoActionPerformed

    private void botaoAtivarChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtivarChaveActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        ativarChave();
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botaoAtivarChaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            //Loggin.logDiarioExcecao(ex, true);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            Commonsout dialog = new Commonsout(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAtivarChave;
    private javax.swing.JButton botaoCopiarIdentificacao;
    private javax.swing.JButton botaoIdentificacaoMaquina;
    private javax.swing.JFormattedTextField ftfbairro;
    private javax.swing.JFormattedTextField ftfcidade;
    private javax.swing.JFormattedTextField ftfcnpj;
    private javax.swing.JFormattedTextField ftfemail;
    private javax.swing.JFormattedTextField ftfendereco;
    private javax.swing.JFormattedTextField ftffone;
    private javax.swing.JFormattedTextField ftfnomeEmpresa;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBairro;
    private javax.swing.JLabel labelCidade;
    private javax.swing.JLabel labelCnpj;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelEmpresa;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelFone;
    private javax.swing.JPanel panelDados;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelRodape;
    // End of variables declaration//GEN-END:variables

    //-------------------------------
    private void gerarResgistroPc() {

        String chaveIdMaquina;
        ComputerInfo idMachine = ComputerInfo.getIntance();

        //VALIDAR CAMPOS
        if (ftfnomeEmpresa.getText() == null || ftfnomeEmpresa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftfnomeEmpresa.requestFocus();
            return;
        }

        if (ftfcnpj.getText() == null || ftfcnpj.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftfcnpj.requestFocus();
            return;
        }
        if (ftfemail.getText() == null || ftfemail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftfemail.requestFocus();
            return;
        }
        if (ftffone.getText() == null || ftffone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftffone.requestFocus();
            return;
        }
        if (ftfendereco.getText() == null || ftfendereco.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftfendereco.requestFocus();
            return;
        }
        if (ftfbairro.getText() == null || ftfbairro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftfbairro.requestFocus();
            return;
        }
        if (ftfcidade.getText() == null || ftfcidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatorio", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            ftfcidade.requestFocus();
            return;
        }

        //----------------------------------------------------------------------
        //sistema
        versao = "|" + "1.01";
        dataChave = "|" + String.valueOf(System.currentTimeMillis());
        dataEnvio = "|" + String.valueOf(System.currentTimeMillis());

        //empresa
        nomeEmpresa = "|" + ftfnomeEmpresa.getText();
        cnpj = "|" + ftfcnpj.getText();
        email = "|" + ftfemail.getText();
        fone = "|" + ftffone.getText();
        endereco = "|" + ftfendereco.getText();
        bairro = "|" + ftfbairro.getText();
        cidade = "|" + ftfcidade.getText();

        //maquina
        caixa = "|" + 01;
        //Serial da CPU
        String cpuSerialA = "|" + idMachine.getCpuSerialA();
        //Serial da CPU
        String cpuSerialB = "|" + idMachine.getCpuSerialB();
        //HostAddress
        String hostAddress = "|" + idMachine.getHostAddress();
        //HostName
        String hostName = "|" + idMachine.getHostName();
        //MacAddress
        String macAddress = "|" + idMachine.getMacAddress();        
        //VirtualAdapter
        String virtualAdapter = "|" + idMachine.isVirtualAdapter();
        //Serial do HD:
        String hdSerial = "|" + idMachine.getHDSerial("c");

        chaveIdMaquina = versao + dataChave + dataEnvio + nomeEmpresa + cnpj + email + fone + endereco + bairro + cidade + caixa + cpuSerialA + cpuSerialB + hostAddress + hostName + macAddress + virtualAdapter + hdSerial;

        //----------------------------------------------------------------------
        jEditorPane1.setText("[" + OS.Encriptar(chaveIdMaquina) + "]"); //enviar para o suporte

        botaoCopiarIdentificacao.setEnabled(true);
    }

    //-----------------------------
    private void copiarIdMaquina() {

        if (jEditorPane1.getText() == null || jEditorPane1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "A identificação da máquina não foi gerada. Vefifique!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            botaoIdentificacaoMaquina.requestFocus();
            return;
        }

        jEditorPane1.selectAll();  //copiar para area de transferencia e posteriormente envio por e-mail

        try {

            String str = jEditorPane1.getText();
            Toolkit toolkit = Toolkit.getDefaultToolkit();
            Clipboard clipboard = toolkit.getSystemClipboard();
            StringSelection strSel = new StringSelection(str);
            clipboard.setContents(strSel, null);

            JOptionPane.showMessageDialog(null, 
                    "Próximo passo:"
                    + "\n"
                    + "\n Agora envie por e-mail o código gerado ao Suporte Técnico."
                    + "\n", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } catch (HeadlessException ex) {
            //Loggin.logDiarioExcecao(ex, true);
        }
    }

    private void colarChave() {

        String text;
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

        try {
            text = (String) clipboard.getData(DataFlavor.stringFlavor);
            jEditorPane1.setText(text);
        } catch (UnsupportedFlavorException | IOException ex) {
            //Loggin.logDiarioExcecao(ex, true);
        }
    }

    //--------------------------
    private void ativarChave() {

        try {

            String str;
            String strEncrip = lerChave();

            if (strEncrip == null || strEncrip.isEmpty()) {
                return;
            }

            str = OS.Descriptografar(strEncrip);
            StringTokenizer st2 = new StringTokenizer(str, "|");
            ComputerInfo idMachine = ComputerInfo.getIntance();

            //-----------------------------------------------
            //sistema
            versao = st2.nextToken();
            dataChave = st2.nextToken();
            dataEnvio = st2.nextToken();

            //empresa
            nomeEmpresa = st2.nextToken();
            cnpj = st2.nextToken();
            email = st2.nextToken();
            fone = st2.nextToken();
            endereco = st2.nextToken();
            bairro = st2.nextToken();
            cidade = st2.nextToken();
            //maquina
            caixa = st2.nextToken();

            //Serial da CPU
            String cpuSerialA = st2.nextToken();
            //Serial da CPU
            String cpuSerialB = st2.nextToken();
            //HostAddress
            String hostAddress = st2.nextToken();
            //HostName
            String hostName = st2.nextToken();
            //MacAddress
            String macAddress = st2.nextToken();
            //VirtualAdapter
            String virtualAdapter = st2.nextToken();
            //Serial do HD:
            String hDSerial = st2.nextToken();

            //Numero dias ativacao
            String numDiasAtivacao = st2.nextToken();

            //limite de acesso
            String numeroAcesso = st2.nextToken();

            qtdDiasLiberacao = Integer.valueOf(numDiasAtivacao);

            //===================================================
            //verificar se a licenca é para essa máquina
            //verificar se a data da ativacao esta no periodo valido
            //salvar: os dias de liberacao, número do caixa no arquivo criptografado
            //===================================================
            //Serial da CPU
            if (!cpuSerialA.equals(idMachine.getCpuSerialA())) {
                JOptionPane.showMessageDialog(null, "Level A, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }

            //Serial da CPU
            if (!cpuSerialB.equals(idMachine.getCpuSerialB())) {
                JOptionPane.showMessageDialog(null, "Level B, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
            //HostAddress
            if (!hostAddress.equals(idMachine.getHostAddress())) {
                JOptionPane.showMessageDialog(null, "Level C, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
            //HostName
            if (!hostName.equals(idMachine.getHostName())) {
                JOptionPane.showMessageDialog(null, "Level D, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
            //MacAddress
            if (!macAddress.equals(idMachine.getMacAddress())) {
                JOptionPane.showMessageDialog(null, "Level E, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
            //VirtualAdapter
            if (!virtualAdapter.equals(idMachine.isVirtualAdapter().toString())) {
                JOptionPane.showMessageDialog(null, "Level F, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
            //Serial do HD:
            if (!hDSerial.equals(idMachine.getHDSerial("c"))) {
                JOptionPane.showMessageDialog(null, "Level G, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }

            //--------------------------------
            //caixa
            if (!caixa.equals("C1")) {
                JOptionPane.showMessageDialog(null, "Level H, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }

            if (qtdDiasLiberacao <= 0) {
                JOptionPane.showMessageDialog(null, "Level I, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }

            Date dataAux = new Date(Long.valueOf(dataChave));
            if (dataAux.compareTo(new Date()) != 0) {
                //JOptionPane.showMessageDialog(null, "Level J, Solicite uma nova chave. Chave invalida!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            }

            //=============================
            //gravar em arquivo criptografado a data máxima de ativacao
            Calendar hoje = Calendar.getInstance();
            hoje.setTime(new java.util.Date());

            //incrementar 30 dia a cada vencimento: hoje + (30 * i) dias
            hoje.add(Calendar.DAY_OF_MONTH, qtdDiasLiberacao);

            String dataExpiracao = String.valueOf(hoje.getTimeInMillis());

            //---------------------------------------------------------------------
            //data maxima de expiracao
            //Geral.gravarGT(Biblioteca.Encriptar(dataExpiracao));
            //data do micro
            //Geral.gravarGT2(Biblioteca.Encriptar(String.valueOf(System.currentTimeMillis()).trim()));
            //identificacao do caixa
            //Geral.gravarGT3(Biblioteca.Encriptar(caixa));

            //
            //Geral.gravarGT4(strEncrip);

            //***************************
            //CONTROLE POR ACESSO
            //***************************
            //Geral.restoreAccess(numeroAcesso, "0");

            JOptionPane.showMessageDialog(null, "Ok! Ativado. O sistema deve ser reiniciado.", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Chave inválida. Verifique!", "Aviso do Sistema", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    //-------------------------
    private String lerChave() {

        //colocar os campos de entradas no próprio jPanel
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        //----------------------------------------------------------------------------
        //LABEL PLACA do veiculo: Cria rodulo do campo
        //----------------------------------------------------------------------------
        javax.swing.JLabel labelAtivaChave = new javax.swing.JLabel("Chave de ativação: ");
        labelAtivaChave.setFont(new java.awt.Font("Tahoma", 0, 20));
        //labelAtivaChave.setMinimumSize(new java.awt.Dimension(150, 30));
        //labelAtivaChave.setPreferredSize(new java.awt.Dimension(150, 30));

        //----------------------------------------------------------------------------
        javax.swing.JEditorPane editorAtivaChave = new javax.swing.JEditorPane();
        editorAtivaChave.setFont(new java.awt.Font("Tahoma", 0, 10));
        editorAtivaChave.setToolTipText("<html> Informe a de liberação do sistema.</html>");
        editorAtivaChave.setMinimumSize(new java.awt.Dimension(440, 150));
        editorAtivaChave.setPreferredSize(new java.awt.Dimension(440, 150));
        editorAtivaChave.setText("");

        //----------------------------------------------------------------------------
        // Colocar os rótulos e a caixas de entrada numa JPanel
        //----------------------------------------------------------------------------
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.JPanel panel = new javax.swing.JPanel();
        panel.setMinimumSize(new java.awt.Dimension(450, 170));
        panel.setPreferredSize(new java.awt.Dimension(450, 170));

        panel.add(labelAtivaChave);
        panel.add(editorAtivaChave);

        editorAtivaChave.requestFocus();

        //------------------------------------------------------------------------------------
        // Mostra o rótulo e a caixa de entrada para o usuario colar a chave
        // O programa só prossegue quando o usuário clicar o botao de OK do showOptionDialog.
        //------------------------------------------------------------------------------------
        String[] options = {"Ativar", "Cancelar"};
        //Percebam que o null na última opção deixa o showOptionDialog sem as opções e o foco vai direto para o textField.
        int escolha = JOptionPane.showOptionDialog(this, panel, "Ativação do Sistema", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
        if (escolha != 0) {
            return null;
        }

        return editorAtivaChave.getText();
    }

}
